openapi: 3.0.3
info:
  title: OpenAPI template
  version: 1.0.0
servers:
  - url: 'https://api.example.com/api/v1'
    description: production
  - url: 'https://{environment}.api.example.com/api/v1'
    variables:
      environment:
        default: dev
        enum:
          - dev
          - staging
    description: develop
  - url: '{protocol}://{host}:{port}/api/v1'
    description: local
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      host:
        default: localhost
      port:
        enum:
          - '8080'
        default: '8080'
tags:
  - name: Users
  - name: Todos
paths:
  /todos:
    get:
      operationId: getTodos
      summary: Todo一覧取得
      tags:
        - Todos
      parameters:
        - $ref: '#/components/parameters/LimitParameter'
        - $ref: '#/components/parameters/OffsetParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetTodosResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
    post:
      operationId: postTodos
      summary: Todo新規作成
      tags:
        - Todos
      requestBody:
        $ref: '#/components/requestBodies/PostTodoRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/GetTodoResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
  '/todos/{todoId}':
    get:
      operationId: getTodo
      summary: Todo取得
      tags:
        - Todos
      parameters:
        - $ref: '#/components/parameters/TodoIdParameter'
      responses:
        '200':
          $ref: '#/components/responses/GetTodoResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
    patch:
      operationId: patchTodo
      summary: Todo更新
      tags:
        - Todos
      parameters:
        - $ref: '#/components/parameters/TodoIdParameter'
      requestBody:
        $ref: '#/components/requestBodies/PatchTodoRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/GetTodoResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
    delete:
      operationId: deleteTodo
      summary: Todo削除
      tags:
        - Todos
      parameters:
        - $ref: '#/components/parameters/TodoIdParameter'
      responses:
        '204':
          description: Todo削除成功
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/InternalServerErrorResponse'
components:
  schemas:
    TodoModel:
      type: object
      description: todo model.
      properties:
        id:
          type: integer
          description: todo id.
          example: 1
        title:
          type: string
          description: todo title.
          example: todo title
        completed:
          type: boolean
          description: todo completed status.
          example: false
        description:
          type: string
          description: todo description.
          example: todo description
    ErrorModel:
      description: Response Error Model.
      required:
        - code
        - message
      type: object
      properties:
        code:
          title: error code
          type: string
          example: 500
        message:
          title: error message
          type: string
          example: Internal Server Error.
  requestBodies:
    PostUserRequestBody:
      description: ユーザー新規作成
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/responses/PostUsersResponse/content/application~1json/schema'
              - type: object
                required:
                  - password
                  - email
                  - name
                properties:
                  id:
                    readOnly: true
    PostTodoRequestBody:
      description: todoの新規作成
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/TodoModel'
              - type: object
                required:
                  - title
                properties:
                  id:
                    readOnly: true
    PatchTodoRequestBody:
      description: todoの更新
      required: true
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/TodoModel'
              - type: object
                properties:
                  id:
                    readOnly: true
  responses:
    PostUsersResponse:
      description: 200 OK
      content:
        application/json:
          schema:
            description: User model
            type: object
            properties:
              id:
                title: User id
                type: string
                example: 2c6e239a-f02b-d158-2833-c7f883bb5530
              password:
                title: User password
                type: string
                example: password
              name:
                title: User name
                type: string
                example: Leanne Graham
              email:
                title: Mail address
                type: string
                example: Sincere@april.biz
    GetTodosResponse:
      description: 200 OK
      content:
        application/json:
          schema:
            type: object
            properties:
              todos:
                type: array
                items:
                  $ref: '#/components/schemas/TodoModel'
              total_count:
                description: アイテムの総数
                type: integer
                example: 10
              limit:
                description: 取得件数
                type: integer
                example: 12
              offset:
                description: 取得開始位置
                type: integer
                example: 0
    GetTodoResponse:
      description: 200 OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TodoModel'
    PostTodosResponse:
      $ref: '#/components/responses/GetTodoResponse'
    PatchTodoResponse:
      $ref: '#/components/responses/GetTodoResponse'
    BadRequestResponse:
      description: Bad Request.
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorModel'
            properties:
              code:
                example: 400
              message:
                example: Bad Request.
    NotFoundResponse:
      description: Not Found.
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorModel'
            properties:
              code:
                example: 404
              message:
                example: Not Found.
    InternalServerErrorResponse:
      description: Internal Server Error.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorModel'
    UnauthorizedResponse:
      description: Unauthorized.
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorModel'
            properties:
              code:
                example: 401
              message:
                example: Unauthorized.
    ForbiddenResponse:
      description: Forbidden.
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/ErrorModel'
            properties:
              code:
                example: 403
              message:
                example: Forbidden.
  parameters:
    TodoIdParameter:
      name: todoId
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: 123e4567-e89b-12d3-a456-426614174000
    LimitParameter:
      name: limit
      in: query
      description: Limit one page.
      schema:
        type: integer
        default: 12
      example: 12
    OffsetParameter:
      name: offset
      in: query
      description: skip count.
      required: false
      schema:
        type: integer
        minimum: 0
        default: 0
      example: 0
