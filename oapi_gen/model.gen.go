// Package oapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.0 DO NOT EDIT.
package oapi

import (
	openapi_types "github.com/oapi-codegen/runtime/types"
)

// ErrorModel Response Error Model.
type ErrorModel struct {
	Code    string `json:"code"`
	Message string `json:"message"`
}

// TodoModel todo model.
type TodoModel struct {
	// Completed todo completed status.
	Completed *bool `json:"completed,omitempty"`

	// Description todo description.
	Description *string `json:"description,omitempty"`

	// Id todo id.
	Id *int `json:"id,omitempty"`

	// Title todo title.
	Title *string `json:"title,omitempty"`
}

// LimitParameter defines model for LimitParameter.
type LimitParameter = int

// OffsetParameter defines model for OffsetParameter.
type OffsetParameter = int

// TodoIdParameter defines model for TodoIdParameter.
type TodoIdParameter = openapi_types.UUID

// BadRequestResponse Response Error Model.
type BadRequestResponse = ErrorModel

// ForbiddenResponse Response Error Model.
type ForbiddenResponse = ErrorModel

// GetTodoResponse todo model.
type GetTodoResponse = TodoModel

// GetTodosResponse defines model for GetTodosResponse.
type GetTodosResponse struct {
	// Limit 取得件数
	Limit *int `json:"limit,omitempty"`

	// Offset 取得開始位置
	Offset *int         `json:"offset,omitempty"`
	Todos  *[]TodoModel `json:"todos,omitempty"`

	// TotalCount アイテムの総数
	TotalCount *int `json:"total_count,omitempty"`
}

// InternalServerErrorResponse Response Error Model.
type InternalServerErrorResponse = ErrorModel

// NotFoundResponse Response Error Model.
type NotFoundResponse = ErrorModel

// PostUsersResponse User model
type PostUsersResponse struct {
	Email    *string `json:"email,omitempty"`
	Id       *string `json:"id,omitempty"`
	Name     *string `json:"name,omitempty"`
	Password *string `json:"password,omitempty"`
}

// UnauthorizedResponse Response Error Model.
type UnauthorizedResponse = ErrorModel

// PatchTodoRequestBody defines model for PatchTodoRequestBody.
type PatchTodoRequestBody struct {
	// Completed todo completed status.
	Completed *bool `json:"completed,omitempty"`

	// Description todo description.
	Description *string      `json:"description,omitempty"`
	Id          *interface{} `json:"id,omitempty"`

	// Title todo title.
	Title *string `json:"title,omitempty"`
}

// PostTodoRequestBody defines model for PostTodoRequestBody.
type PostTodoRequestBody struct {
	// Completed todo completed status.
	Completed *bool `json:"completed,omitempty"`

	// Description todo description.
	Description *string      `json:"description,omitempty"`
	Id          *interface{} `json:"id,omitempty"`

	// Title todo title.
	Title string `json:"title"`
}

// PostUserRequestBody defines model for PostUserRequestBody.
type PostUserRequestBody struct {
	Email    string       `json:"email"`
	Id       *interface{} `json:"id,omitempty"`
	Name     string       `json:"name"`
	Password string       `json:"password"`
}

// GetTodosParams defines parameters for GetTodos.
type GetTodosParams struct {
	// Limit Limit one page.
	Limit *LimitParameter `form:"limit,omitempty" json:"limit,omitempty"`

	// Offset skip count.
	Offset *OffsetParameter `form:"offset,omitempty" json:"offset,omitempty"`
}

// PostTodosJSONBody defines parameters for PostTodos.
type PostTodosJSONBody struct {
	// Completed todo completed status.
	Completed *bool `json:"completed,omitempty"`

	// Description todo description.
	Description *string      `json:"description,omitempty"`
	Id          *interface{} `json:"id,omitempty"`

	// Title todo title.
	Title string `json:"title"`
}

// PatchTodoJSONBody defines parameters for PatchTodo.
type PatchTodoJSONBody struct {
	// Completed todo completed status.
	Completed *bool `json:"completed,omitempty"`

	// Description todo description.
	Description *string      `json:"description,omitempty"`
	Id          *interface{} `json:"id,omitempty"`

	// Title todo title.
	Title *string `json:"title,omitempty"`
}

// PostTodosJSONRequestBody defines body for PostTodos for application/json ContentType.
type PostTodosJSONRequestBody PostTodosJSONBody

// PatchTodoJSONRequestBody defines body for PatchTodo for application/json ContentType.
type PatchTodoJSONRequestBody PatchTodoJSONBody
